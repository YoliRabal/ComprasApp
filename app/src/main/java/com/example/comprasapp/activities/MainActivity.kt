package com.example.comprasapp.activities

import android.content.Intent
import android.os.Bundle
import android.util.Log
import android.view.Menu
import android.view.MenuItem
import android.view.View
import android.widget.AdapterView
import android.widget.ArrayAdapter
import android.widget.Spinner
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import com.android.volley.Request
import com.android.volley.toolbox.JsonArrayRequest
import com.android.volley.toolbox.JsonObjectRequest
import com.example.comprasapp.R
import com.example.comprasapp.adapters.ProductosAdapter
import com.example.comprasapp.models.Carrito
import com.example.comprasapp.models.Producto
import com.example.comprasapp.utils.VolleySingleton

class MainActivity : AppCompatActivity() {
    private lateinit var recyclerView: RecyclerView
    private lateinit var spinnerCategorias: Spinner
    private val productos = mutableListOf<Producto>()

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        recyclerView = findViewById(R.id.recyclerProductos)
        spinnerCategorias = findViewById(R.id.spinnerCategorias)
        recyclerView.layoutManager = LinearLayoutManager(this)

        // 游댳 Se elimina el bot칩n flotante porque ahora el men칰 superior manejar치 "Ver Carrito"

        obtenerCategorias()
    }

    /**
     * 游댳 Obtiene las categor칤as y las carga en el Spinner.
     * 游댳 Al seleccionar una categor칤a, filtra los productos.
     */
    private fun obtenerCategorias() {
        val url = "https://dummyjson.com/products/categories"
        val request = JsonArrayRequest(Request.Method.GET, url, null,
            { response ->
                val categorias = mutableListOf<String>()
                categorias.add("Todos") // 游댳 Agregamos opci칩n para ver todos los productos

                // 游댳 Extraemos solo el campo "name" de cada objeto
                for (i in 0 until response.length()) {
                    val categoriaObj = response.getJSONObject(i)  // 游댳 Obtenemos el objeto JSON
                    val categoriaNombre = categoriaObj.getString("name")  // 游댳 Extraemos "name"
                    categorias.add(categoriaNombre)
                }

                // 游댳 Log para verificar los datos
                Log.d("Categor칤as", "Lista de categor칤as extra칤das: $categorias")

                // 游댳 Configuramos el Spinner con los nombres extra칤dos
                val adapter = ArrayAdapter(this, android.R.layout.simple_spinner_dropdown_item, categorias)
                spinnerCategorias.adapter = adapter

                // 游댳 Escuchar cambios en el Spinner para filtrar productos
                spinnerCategorias.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
                    override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {
                        val categoriaSeleccionada = categorias[position]
                        obtenerProductos(categoriaSeleccionada)
                    }

                    override fun onNothingSelected(parent: AdapterView<*>?) {
                        obtenerProductos() // 游댳 Carga todos los productos por defecto
                    }
                }

                // 游댳 Cargar productos iniciales sin filtro
                obtenerProductos("Todos")
            },
            { error ->
                Log.e("Volley", "Error al obtener categor칤as: ${error.message}")
            }
        )
        VolleySingleton.getInstance(this).addToRequestQueue(request)
    }



    /**
     * 游댳 Obtiene los productos y los muestra en el RecyclerView.
     * 游댳 Filtra los productos si se selecciona una categor칤a.
     */
    private fun obtenerProductos(categoria: String? = null) {
        val url = if (categoria == null || categoria == "Todos") {
            "https://dummyjson.com/products" // 游댳 Obtiene todos los productos
        } else {
            "https://dummyjson.com/products/category/$categoria" // 游댳 Filtra por categor칤a
        }

        val request = JsonObjectRequest(Request.Method.GET, url, null,
            { response ->
                val productosArray = response.getJSONArray("products")
                val productosFiltrados = mutableListOf<Producto>()

                for (i in 0 until productosArray.length()) {
                    val item = productosArray.getJSONObject(i)
                    productosFiltrados.add(
                        Producto(
                            item.getInt("id"),
                            item.getString("title"),
                            item.getDouble("price"),
                            item.getString("thumbnail")
                        )
                    )
                }

                // 游댳 Actualizar el RecyclerView con los productos filtrados
                recyclerView.adapter = ProductosAdapter(productosFiltrados) { producto ->
                    Carrito.agregarProducto(producto)
                    Toast.makeText(this, "${producto.title} a침adido al carrito", Toast.LENGTH_SHORT).show()
                }
            },
            { error ->
                Log.e("Volley", "Error al obtener productos: ${error.message}")
            }
        )
        VolleySingleton.getInstance(this).addToRequestQueue(request)
    }

    /**
     * 游댳 Agrega el men칰 superior con la opci칩n "Ver Carrito".
     */
    override fun onCreateOptionsMenu(menu: Menu?): Boolean {
        menuInflater.inflate(R.menu.menu_main, menu)
        return true
    }

    /**
     * 游댳 Maneja la selecci칩n de opciones en el men칰.
     */
    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        return when (item.itemId) {
            R.id.menu_ver_carrito -> {
                val intent = Intent(this, SecondActivity::class.java)
                startActivity(intent)
                true
            }
            else -> super.onOptionsItemSelected(item)
        }
    }
}
